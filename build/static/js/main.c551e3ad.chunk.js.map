{"version":3,"sources":["hooks/usePlayerData.ts","components/Hangman.tsx","components/Word.tsx","components/Keyboard.tsx","components/Loader.tsx","components/AttemptsLeft.tsx","components/Modal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["usePlayerData","useState","isLoading","setIsLoading","error","setError","currentSessionId","setCurrentSessionId","currentWord","setCurrentWord","numberOfMoves","setNumberOfMoves","wrongLetters","setWrongLetters","move","setMove","reset","setReset","fetchPlayerData","useCallback","a","localSessionId","localStorage","getItem","axios","get","params","sessionId","data","wordArray","movesCount","incorrectLetters","status","setItem","includes","response","useEffect","dispatchMove","currentMove","Hangman","moves","isWinner","gameOver","HangmanWrapper","Svg","x","y","viewBox","Line","greyed","hidden","x1","y1","x2","y2","Circle","cx","cy","r","Path","d","styled","div","svg","line","circle","path","memo","Word","word","WordContainer","WordWrapper","map","letter","index","Letter","wordLength","length","visible","Boolean","span","Keyboard","letterClickHandler","alpha","Array","from","e","i","String","fromCharCode","KeyboardWrapper","Keys","filter","Key","onClick","button","Overlay","LoaderContainer","SpinnerContainer","Loader","fill","stroke-width","color","stroke-miterlimit","AttemptsLeft","Wrapper","Text","Modal","isVisible","winner","closeHandler","message","ModalWrapper","ModalDialog","stopPropagation","ModalBody","ModalContent","PlayAgainButton","AppContainer","ControlsdWrapper","FlexWrapper","NewWordButton","App","setIsModalOpen","isModalOpen","resetHandler","playAgainHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c551e3ad.chunk.js","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { useEffect, useState, useCallback } from \"react\";\r\nimport PlayerDataResponse from \"../typings/PlayerData\";\r\n\r\nconst usePlayerData = () => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string>(\"\");\r\n  const [currentSessionId, setCurrentSessionId] = useState<string>(\"\");\r\n  const [currentWord, setCurrentWord] = useState<string[]>([]);\r\n  const [numberOfMoves, setNumberOfMoves] = useState<number>(0);\r\n  const [wrongLetters, setWrongLetters] = useState<string[]>([]);\r\n  const [move, setMove] = useState<string | null>(null);\r\n  const [reset, setReset] = useState<boolean>(false);\r\n\r\n  const fetchPlayerData = useCallback(async () => {\r\n    const localSessionId = localStorage.getItem(\"HANGMAN_SESSION_ID\");\r\n    setIsLoading(true);\r\n    try {\r\n      const {\r\n        data: { sessionId, wordArray, movesCount, incorrectLetters },\r\n        status,\r\n      } = (await axios.get(\"move\", {\r\n        params: {\r\n          sessionId: localSessionId,\r\n          move,\r\n          reset: reset ? 1 : null,\r\n        },\r\n      })) as AxiosResponse<PlayerDataResponse>;\r\n      if (status === 200) {\r\n        if (!localSessionId || localSessionId !== sessionId) {\r\n          localStorage.setItem(\"HANGMAN_SESSION_ID\", sessionId);\r\n        }\r\n        if ((move && wordArray.includes(move)) || !move) {\r\n          setCurrentWord(wordArray);\r\n        }\r\n        if ((move && incorrectLetters.includes(move)) || !move) {\r\n          setWrongLetters(incorrectLetters);\r\n        }\r\n        reset && setReset(false);\r\n        setCurrentSessionId(sessionId);\r\n        setNumberOfMoves(movesCount);\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      if (error.response?.status === 404) {\r\n        /*If session id does not exist on server get a new one */\r\n        const {\r\n          data: { sessionId, wordArray, movesCount },\r\n        } = (await axios.get(\"move\")) as AxiosResponse<PlayerDataResponse>;\r\n        setCurrentSessionId(sessionId);\r\n        setCurrentWord(wordArray);\r\n        setNumberOfMoves(movesCount);\r\n        localStorage.setItem(\"HANGMAN_SESSION_ID\", sessionId);\r\n      }\r\n      setError(error);\r\n      setIsLoading(false);\r\n    }\r\n  }, [\r\n    setIsLoading,\r\n    setError,\r\n    setCurrentSessionId,\r\n    setCurrentWord,\r\n    setNumberOfMoves,\r\n    setWrongLetters,\r\n    move,\r\n    reset,\r\n  ]);\r\n\r\n  const dispatchMove = ({\r\n    currentMove,\r\n    reset,\r\n  }: {\r\n    currentMove: string;\r\n    reset: boolean;\r\n  }) => {\r\n    setReset(reset);\r\n    setMove(currentMove);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPlayerData();\r\n  }, [fetchPlayerData]);\r\n\r\n  return {\r\n    move,\r\n    isLoading,\r\n    error,\r\n    sessionId: currentSessionId,\r\n    wordArray: currentWord,\r\n    wrongLetters,\r\n    numberOfMoves,\r\n    dispatchMove,\r\n  };\r\n};\r\n\r\nexport default usePlayerData;\r\n","import styled from \"styled-components\";\r\nimport { memo } from \"react\";\r\n\r\ninterface HangmanProps {\r\n  moves: number;\r\n  gameOver: boolean;\r\n}\r\n\r\nconst Hangman = ({ moves, gameOver }: HangmanProps) => {\r\n  const isWinner = gameOver && moves<6;\r\n  return (\r\n    <HangmanWrapper>\r\n      <Svg x=\"0px\" y=\"0px\" viewBox=\"0 0 236 330\">\r\n        <Line\r\n          greyed={false}\r\n          hidden={false}\r\n          x1=\"0\"\r\n          y1=\"330\"\r\n          x2=\"236\"\r\n          y2=\"330\"\r\n        ></Line>\r\n        <Line\r\n          greyed={false}\r\n          hidden={false}\r\n          x1=\"59\"\r\n          y1=\"0\"\r\n          x2=\"59\"\r\n          y2=\"330\"\r\n        ></Line>\r\n        <Line\r\n          greyed={false}\r\n          hidden={false}\r\n          x1=\"139.4\"\r\n          y1=\"53.5\"\r\n          x2=\"139.4\"\r\n          y2=\"0\"\r\n        ></Line>\r\n        <Line\r\n          greyed={false}\r\n          hidden={false}\r\n          x1=\"58\"\r\n          y1=\"2.5\"\r\n          x2=\"139.4\"\r\n          y2=\"2.5\"\r\n        ></Line>\r\n        {/**Greys */}\r\n        <Line\r\n          greyed={moves < 3}\r\n          hidden={isWinner}\r\n          x1=\"139.4\"\r\n          y1=\"133.9\"\r\n          x2=\"121.6\"\r\n          y2=\"212.4\"\r\n        ></Line>\r\n        <Line\r\n          greyed={moves < 4}\r\n          hidden={isWinner}\r\n          x1=\"139.4\"\r\n          y1=\"134.3\"\r\n          x2=\"154.2\"\r\n          y2=\"210.8\"\r\n        ></Line>\r\n        <Line\r\n          greyed={moves < 5}\r\n          hidden={isWinner}\r\n          x1=\"139.4\"\r\n          y1=\"218.7\"\r\n          x2=\"167.5\"\r\n          y2=\"291.4\"\r\n        ></Line>\r\n        <Line\r\n          greyed={moves < 6}\r\n          hidden={isWinner}\r\n          x1=\"139.4\"\r\n          y1=\"218.7\"\r\n          x2=\"114.2\"\r\n          y2=\"299.3\"\r\n        ></Line>\r\n        <Line\r\n          greyed={moves < 2}\r\n          hidden={isWinner}\r\n          x1=\"139.4\"\r\n          y1=\"124.7\"\r\n          x2=\"139.4\"\r\n          y2=\"218.7\"\r\n        ></Line>\r\n        <Circle\r\n          greyed={moves < 1}\r\n          hidden={isWinner}\r\n          cx=\"139.4\"\r\n          cy=\"89.1\"\r\n          r=\"35.6\"\r\n        ></Circle>\r\n        {/**Loser */}\r\n        <Line\r\n          greyed={false}\r\n          hidden={moves < 6}\r\n          x1=\"122.9\"\r\n          y1=\"83.4\"\r\n          x2=\"131.1\"\r\n          y2=\"91.6\"\r\n        ></Line>\r\n        <Line\r\n          greyed={false}\r\n          hidden={moves < 6}\r\n          x1=\"122.6\"\r\n          y1=\"91.9\"\r\n          x2=\"131.6\"\r\n          y2=\"82.9\"\r\n        ></Line>\r\n        <Line\r\n          greyed={false}\r\n          hidden={moves < 6}\r\n          x1=\"147\"\r\n          y1=\"83.5\"\r\n          x2=\"155.3\"\r\n          y2=\"91.8\"\r\n        ></Line>\r\n        <Line\r\n          greyed={false}\r\n          hidden={moves < 6}\r\n          x1=\"146.8\"\r\n          y1=\"92\"\r\n          x2=\"155.8\"\r\n          y2=\"83\"\r\n        ></Line>\r\n        <Path\r\n          greyed={false}\r\n          hidden={moves < 6}\r\n          d=\"M126.4,106.5c0-1.8,5.6-3.2,12.4-3.2\"\r\n        ></Path>\r\n        <Path\r\n          greyed={false}\r\n          hidden={moves < 6}\r\n          d=\"M150.9,106.5c0-1.8-5.6-3.2-12.4-3.2\"\r\n        ></Path>\r\n        {/** isWinner */}\r\n        <Circle\r\n          greyed={false}\r\n          hidden={!isWinner}\r\n          cx=\"167\"\r\n          cy=\"119.9\"\r\n          r=\"35.6\"\r\n        ></Circle>\r\n        <Line\r\n          greyed={false}\r\n          hidden={!isWinner}\r\n          x1=\"167\"\r\n          y1=\"169\"\r\n          x2=\"231.8\"\r\n          y2=\"96.7\"\r\n        ></Line>\r\n        <Line\r\n          greyed={false}\r\n          hidden={!isWinner}\r\n          x1=\"167\"\r\n          y1=\"155.5\"\r\n          x2=\"167\"\r\n          y2=\"249.4\"\r\n        ></Line>\r\n        <Line\r\n          greyed={false}\r\n          hidden={!isWinner}\r\n          x1=\"167\"\r\n          y1=\"249.4\"\r\n          x2=\"180.4\"\r\n          y2=\"330.5\"\r\n        ></Line>\r\n        <Line\r\n          greyed={false}\r\n          hidden={!isWinner}\r\n          x1=\"167\"\r\n          y1=\"249.4\"\r\n          x2=\"142.4\"\r\n          y2=\"330.5\"\r\n        ></Line>\r\n        <Line\r\n          greyed={false}\r\n          hidden={!isWinner}\r\n          x1=\"167\"\r\n          y1=\"169\"\r\n          x2=\"92.8\"\r\n          y2=\"106.4\"\r\n        ></Line>\r\n        <Path\r\n          greyed={false}\r\n          hidden={!isWinner}\r\n          d=\"M151.8,133.7c0,4.2,6.9,7.7,15.4,7.7\"\r\n        ></Path>\r\n        <Path\r\n          greyed={false}\r\n          hidden={!isWinner}\r\n          d=\"M182.2,133.7c0,4.2-6.9,7.7-15.4,7.7\"\r\n        ></Path>\r\n        <Line\r\n          greyed={false}\r\n          hidden={!isWinner}\r\n          x1=\"151\"\r\n          y1=\"118.1\"\r\n          x2=\"161.1\"\r\n          y2=\"118.1\"\r\n        ></Line>\r\n        <Line\r\n          greyed={false}\r\n          hidden={!isWinner}\r\n          x1=\"173.1\"\r\n          y1=\"118.1\"\r\n          x2=\"183.2\"\r\n          y2=\"118.1\"\r\n        ></Line>\r\n      </Svg>\r\n    </HangmanWrapper>\r\n  );\r\n};\r\n\r\n\r\nconst HangmanWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 75vh;\r\n  @media screen and (max-width: 786px) {\r\n    height: 40vh;\r\n  }\r\n`;\r\n\r\nconst Svg = styled.svg`\r\n  height: 100%;\r\n  fill: transparent;\r\n  stroke-width: 4px;\r\n  stroke-linecap: round;\r\n`;\r\n\r\nconst Line = styled.line<{\r\n  greyed: boolean;\r\n  hidden: boolean;\r\n}>`\r\n  opacity: ${({ hidden }) => (hidden ? \"0\" : \"1\")};\r\n  stroke: ${({ greyed }) => (greyed ? \"#30635e\" : \"#fff\")};\r\n`;\r\n\r\nconst Circle = styled.circle<{\r\n  greyed: boolean;\r\n  hidden: boolean;\r\n}>`\r\n  opacity: ${({ hidden }) => (hidden ? \"0\" : \"1\")};\r\n  stroke: ${({ greyed }) => (greyed ? \"#30635e\" : \"#fff\")};\r\n`;\r\n\r\nconst Path = styled.path<{\r\n  greyed: boolean;\r\n  hidden: boolean;\r\n}>`\r\n  opacity: ${({ hidden }) => (hidden ? \"0\" : \"1\")};\r\n  stroke: ${({ greyed }) => (greyed ? \"#30635e\" : \"#fff\")};\r\n`;\r\nexport default memo(Hangman);\r\n","import styled from \"styled-components\";\r\nimport { memo } from \"react\";\r\n\r\ninterface WordProps {\r\n  word: string[];\r\n}\r\n\r\nfunction Word({ word }: WordProps) {\r\n  return (\r\n    <WordContainer>\r\n      <WordWrapper>\r\n        {word.map((letter, index) => {\r\n          return (\r\n            <Letter\r\n              wordLength={word.length}\r\n              visible={Boolean(letter.length)}\r\n              key={`_word_${index}`}\r\n            >\r\n              {letter.length ? letter : \"\"}\r\n            </Letter>\r\n          );\r\n        })}\r\n      </WordWrapper>\r\n    </WordContainer>\r\n  );\r\n}\r\n\r\nconst WordContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst WordWrapper = styled.span`\r\n  padding: 0 0.75em;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst Letter = styled.span<{\r\n  visible: boolean;\r\n  wordLength: number;\r\n}>`\r\n  display: inline-block;\r\n  border-bottom: 3px solid transparent;\r\n  width: ${({ wordLength }) => (wordLength > 8 ? \"0.85em\" : \"1em\")};\r\n  font-size: 1.75em;\r\n  color: #fff;\r\n  vertical-align: top;\r\n  margin-left: 4px;\r\n  height: 2ex;\r\n  line-height: 2ex;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  border-color: ${({ visible }) => (visible ? \"none\" : \"#fff\")};\r\n\r\n  :first-child {\r\n    margin-left: 0;\r\n  }\r\n`;\r\n\r\nexport default memo(Word);\r\n","import styled from \"styled-components\";\r\nimport { memo } from \"react\";\r\n\r\ninterface KeyboardProps {\r\n  word: string[];\r\n  wrongLetters: string[];\r\n  letterClickHandler: ({ letter }: { letter: string }) => void;\r\n}\r\n\r\nconst Keyboard = ({\r\n  word,\r\n  wrongLetters,\r\n  letterClickHandler,\r\n}: KeyboardProps) => {\r\n  const alpha = Array.from(Array(26)).map((e, i) =>\r\n    String.fromCharCode(i + 97)\r\n  );\r\n  return (\r\n    <KeyboardWrapper>\r\n      <Keys>\r\n        {alpha\r\n          .filter((letter) => {\r\n            return !wrongLetters.includes(letter) && !word.includes(letter);\r\n          })\r\n          .map((letter, index) => {\r\n            return (\r\n              <Key\r\n                key={`_alpha_${index}`}\r\n                onClick={() =>\r\n                  letterClickHandler({\r\n                    letter,\r\n                  })\r\n                }\r\n              >\r\n                {letter}\r\n              </Key>\r\n            );\r\n          })}\r\n      </Keys>\r\n    </KeyboardWrapper>\r\n  );\r\n};\r\n\r\nconst KeyboardWrapper = styled.div`\r\n  width: 100%;\r\n  user-select: none;\r\n  transition: bottom 0.4s;\r\n`;\r\n\r\nconst Keys = styled.div`\r\n  text-align: center;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Key = styled.button`\r\n  height: 45px;\r\n  width: 5em;\r\n  margin: 3px;\r\n  border-radius: 4px;\r\n  border: none;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  color: #ffffff;\r\n  font-size: 1em;\r\n  outline: none;\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  vertical-align: top;\r\n  padding: 0;\r\n  -webkit-tap-highlight-color: transparent;\r\n  position: relative;\r\n  @media screen and (max-width: 786px) {\r\n    width: 3em;\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    width: 2em;\r\n  }\r\n`;\r\n\r\nexport default memo(Keyboard);\r\n","import styled from \"styled-components\";\r\ninterface LoaderProps {\r\n  isLoading: boolean;\r\n}\r\n\r\nfunction Loader({ isLoading }: LoaderProps) {\r\n  return (\r\n    <>\r\n      {isLoading && (\r\n        <Overlay>\r\n          <LoaderContainer>\r\n            <SpinnerContainer>\r\n              <Svg viewBox=\"25 25 50 50\">\r\n                <Circle\r\n                  cx=\"50\"\r\n                  cy=\"50\"\r\n                  r=\"20\"\r\n                  fill=\"none\"\r\n                  stroke-width=\"2\"\r\n                  color=\"#fff\"\r\n                  stroke-miterlimit=\"10\"\r\n                ></Circle>\r\n              </Svg>\r\n            </SpinnerContainer>\r\n            <span>Loading ....</span>\r\n          </LoaderContainer>\r\n        </Overlay>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  z-index: 999;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgb(0, 0, 0);\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst LoaderContainer = styled.div`\r\n  color: #fff;\r\n`;\r\n\r\nconst SpinnerContainer = styled.div`\r\n  position: relative;\r\n  margin: 0px auto 10px auto;\r\n  width: 50px;\r\n  max-height: 100%;\r\n\r\n  ::before {\r\n    content: \"\";\r\n    display: block;\r\n    padding-top: 100%;\r\n  }\r\n`;\r\n\r\nconst Svg = styled.svg`\r\n  animation: rotate 2s linear infinite;\r\n  height: 100%;\r\n  transform-origin: center center;\r\n  width: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n  text-align: center;\r\n  font-size: 1.2em;\r\n  color: #fff;\r\n\r\n  @keyframes rotate {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n      -ms-transform: rotate(0deg);\r\n      transform: rotate(0deg);\r\n    }\r\n\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n      -ms-transform: rotate(360deg);\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Circle = styled.circle`\r\n  animation: strokeAnimation 1.5s ease-in-out infinite;\r\n  stroke-dasharray: 1, 200;\r\n  stroke-dashoffset: 0;\r\n  stroke-linecap: round;\r\n  stroke: #fff;\r\n\r\n  @keyframes strokeAnimation {\r\n    0% {\r\n      stroke-dasharray: 1, 200;\r\n      stroke-dashoffset: 0;\r\n    }\r\n    50% {\r\n      stroke-dasharray: 89, 200;\r\n      stroke-dashoffset: -35px;\r\n    }\r\n\r\n    100% {\r\n      stroke-dasharray: 89, 200;\r\n      stroke-dashoffset: -124px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\nimport { memo } from \"react\";\r\n\r\ninterface AttempsLeftProps {\r\n  numberOfMoves: number;\r\n}\r\nconst AttemptsLeft = ({ numberOfMoves }: AttempsLeftProps) => {\r\n  return (\r\n    <Wrapper>\r\n      <Text>{6 - numberOfMoves} Attpempts Left</Text>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 1em 0;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: #fff;\r\n`;\r\n\r\nexport default memo(AttemptsLeft);\r\n","import { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\ninterface ModalProps {\r\n  isVisible: boolean;\r\n  winner: boolean;\r\n  closeHandler: () => void;\r\n}\r\n\r\nconst Modal = ({ isVisible, winner, closeHandler }: ModalProps) => {\r\n  const message = winner ? \"You have won :)\" : \"You have lost :(\";\r\n  return (\r\n    <>\r\n      {isVisible && (\r\n        <ModalWrapper>\r\n          <ModalDialog onClick={(e) => e.stopPropagation()}>\r\n            <ModalBody>\r\n              <ModalContent>\r\n                <h2>{message}</h2>\r\n                <PlayAgainButton onClick={closeHandler}>\r\n                  Play Again\r\n                </PlayAgainButton>\r\n              </ModalContent>\r\n            </ModalBody>\r\n          </ModalDialog>\r\n        </ModalWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(Modal);\r\n\r\nconst ModalWrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  z-index: 9999;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n  animation-name: appear;\r\n  animation-duration: 300ms;\r\n`;\r\n\r\nconst ModalDialog = styled.div`\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  max-width: 350px;\r\n  background: white;\r\n  position: relative;\r\n  margin: 0 20px;\r\n  max-height: calc(100vh - 40px);\r\n  text-align: left;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  -webkit-animation-name: animatetop;\r\n  -webkit-animation-duration: 0.4s;\r\n  animation-name: slide-in;\r\n  animation-duration: 0.5s;\r\n\r\n  @keyframes appear {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  @keyframes slide-in {\r\n    from {\r\n      transform: translateY(-150px);\r\n    }\r\n    to {\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModalBody = styled.div`\r\n  overflow: auto;\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst PlayAgainButton = styled.button`\r\n  padding: 1em 2em;\r\n  background: #004134;\r\n  color: #fff;\r\n  font-size: 1em;\r\n  border: none;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n`;\r\n","import { useState, useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport usePlayerData from \"./hooks/usePlayerData\";\nimport \"./App.css\";\nimport Hangman from \"./components/Hangman\";\nimport Word from \"./components/Word\";\nimport Keyboard from \"./components/Keyboard\";\nimport Loader from \"./components/Loader\";\nimport AttemptsLeft from \"./components/AttemptsLeft\";\nimport Modal from \"./components/Modal\";\n\nfunction App() {\n  const {\n    isLoading,\n    error,\n    wordArray,\n    wrongLetters,\n    numberOfMoves,\n    dispatchMove,\n  } = usePlayerData();\n\n  useEffect(() => {\n      setIsModalOpen(!!wordArray.length && (!wordArray.includes(\"\") || numberOfMoves>5));\n  }, [wordArray, numberOfMoves])\n\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const letterClickHandler = useCallback(({ letter }: { letter: string }) => {\n    dispatchMove({ currentMove: letter, reset: false });\n  }, [dispatchMove]);\n\n  const resetHandler = useCallback(() => {\n    dispatchMove({ currentMove: \"\", reset: true });\n  }, [dispatchMove]);\n\n  const playAgainHandler = useCallback(() => {\n    resetHandler();\n    setIsModalOpen(false);\n  }, [resetHandler, setIsModalOpen]);\n\n  return (\n    <AppContainer>\n      <Loader isLoading={isLoading} />\n      <>\n        <Hangman moves={numberOfMoves} gameOver={isModalOpen} />\n        <ControlsdWrapper>\n          <Word word={wordArray} />\n          <AttemptsLeft numberOfMoves={numberOfMoves} />\n          <Keyboard\n            word={wordArray}\n            letterClickHandler={letterClickHandler}\n            wrongLetters={wrongLetters}\n          />\n          <FlexWrapper>\n            <NewWordButton onClick={resetHandler}>New Word</NewWordButton>\n          </FlexWrapper>\n        </ControlsdWrapper>\n        <Modal\n          isVisible={isModalOpen}\n          winner={numberOfMoves<5}\n          closeHandler={playAgainHandler}\n        ></Modal>\n      </>\n    </AppContainer>\n  );\n}\n\nconst AppContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  align-items: center;\n  background: #004134;\n`;\n\nconst ControlsdWrapper = styled.div`\n  height: 75vh;\n  @media screen and (max-width: 786px) {\n    height: 40vh;\n  }\n`;\n\nconst FlexWrapper = styled.div`\n  margin: 0.75em;\n  display: flex;\n  justify-content: center;\n`;\n\nconst NewWordButton = styled.button`\n  border: 1px solid white;\n  background: transparent;\n  color: white;\n  padding: 0.75em 1em;\n  border-radius: 3px;\n  font-size: 1em;\n`;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}